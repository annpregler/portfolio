--1. How many employees has the company ever had?
SELECT COUNT(employee_id) FROM employees;

--2. How many employees are currently employed?
SELECT COUNT(employee_id)
FROM employees
WHERE leave_date='';

--3. Which location has the most currently employed employees?
SELECT location, max(employee_count) FROM --This is using a subquery to select only the max. It would also be fine to just find all the counts, as the max is clearly visible.
(SELECT location, COUNT(employee_id) as employee_count
FROM employees
WHERE leave_date=''
GROUP BY location);

--4. How many employees were active during the year 2023?
SELECT COUNT(employee_id)
FROM employees
WHERE (leave_date='' or leave_date>='2023-01-01')
AND (hire_date<'2024-01-01');

--5. What percentage of all-time employees are currently employed?
SELECT SUM(CASE WHEN leave_date='' THEN 1.0 ELSE 0.0 END)*100/COUNT(employee_id) AS current_pct
FROM employees;

--6. How many current employees are there of each race?
SELECT race, COUNT(employee_id)
FROM employees
WHERE leave_date=''
GROUP BY race;

--7. What percentage of current employees are of each gender?
SELECT SUM(CASE WHEN gender='Female' THEN 1.0 ELSE 0.0 END)*100/COUNT(employee_id) AS pct_female,
SUM(CASE WHEN gender='Male' THEN 1.0 ELSE 0.0 END)*100/COUNT(employee_id) AS pct_male,
SUM(CASE WHEN gender='Other' THEN 1.0 ELSE 0.0 END)*100/COUNT(employee_id) AS pct_other
FROM employees
WHERE leave_date=''; --there are lots of ways to approach this one - this is just one option

--8. How many employees left the company for a reason that wasn’t being fired?
SELECT COUNT(employees.employee_id)
FROM employees
LEFT JOIN exit_interviews
ON employees.employee_id=exit_interviews.employee_id
WHERE leave_date!=''
AND (reason_for_leaving!='fired' OR reason_for_leaving IS NULL)
;


--9. Which active employee has the highest salary?
SELECT employee_id, first_name, last_name, MAX(salary)
FROM employees
WHERE leave_date='';

--10. What is that employee’s job?
SELECT employee_id, first_name, last_name, MAX(salary), job_title
FROM employees
LEFT JOIN positions
ON employees.positionID=positions.position_id
WHERE leave_date='';

--11. What is the highest salary in each location?
SELECT location, MAX(salary)
FROM employees
GROUP BY location;

--12. What is the average salary for each location?
SELECT location, AVG(salary)
FROM employees
GROUP BY location;

--13. How long has each employee been at the company?
SELECT *, (CASE WHEN leave_date='' THEN DATE('now') ELSE leave_date END) - hire_date as employment_length
FROM employees;

--14. Which employee spent the longest time at the company?
SELECT *, MAX((CASE WHEN leave_date='' THEN DATE('now') ELSE leave_date END) - hire_date) as employment_length
FROM employees;

--15. How many employees are over the age of 60?
SELECT COUNT(employee_id)
FROM employees
WHERE (DATE('now')-birthdate)>60;

--16. What is the most common job title?
SELECT job_title, MAX(employee_count) FROM
(SELECT job_title, COUNT(employee_id) as employee_count
FROM employees
LEFT JOIN positions
ON employees.positionID=positions.position_id
GROUP BY job_title);

--17. What is the least common job title?
SELECT job_title, MIN(employee_count) FROM
(SELECT job_title, COUNT(employee_id) as employee_count
FROM employees
LEFT JOIN positions
ON employees.positionID=positions.position_id
GROUP BY job_title);

--18. What is the average salary for a junior employee?
SELECT AVG(salary)
FROM employees
LEFT JOIN positions
ON employees.positionID=positions.position_id
WHERE level='Junior';

--19. How many senior employees left in 2024?
SELECT COUNT(employee_id)
FROM employees
LEFT JOIN positions
ON employees.positionID=positions.position_id
WHERE level='Senior'
AND leave_date>='2024-01-01' AND leave_date<'2025-01-01';

--20. How many senior employees were hired in 2024?
SELECT COUNT(employee_id)
FROM employees
LEFT JOIN positions
ON employees.positionID=positions.position_id
WHERE level='Senior'
AND hire_date>='2024-01-01' AND hire_date<'2025-01-01';

--21. What was the most common reason that senior employees left? (In any year)
SELECT reason_for_leaving, MAX(employee_count) FROM
(SELECT reason_for_leaving, COUNT(employees.employee_id) as employee_count
FROM employees
LEFT JOIN positions
ON employees.positionID=positions.position_id
LEFT JOIN exit_interviews
ON employees.employee_id=exit_interviews.employee_id
WHERE level='Senior'
GROUP BY reason_for_leaving);

--22. What was the average rating junior employees gave when they left the company?
SELECT AVG(overall_experience)
FROM employees
LEFT JOIN positions
ON employees.positionID=positions.position_id
LEFT JOIN exit_interviews
ON employees.employee_id=exit_interviews.employee_id
WHERE level='Junior';

--23. How much does the engineering department spend paying junior employees?
SELECT SUM(salary)
FROM employees
LEFT JOIN positions
ON employees.positionID=positions.position_id
WHERE level='Junior'
AND department='Engineering'
AND leave_date='';

--24. What percentage of their total staff budget is that?
SELECT department_budget.department, junior_salary*100.0/staff_budget as jr_pct
FROM department_budget
LEFT JOIN
(SELECT department, SUM(salary) AS junior_salary
FROM employees
LEFT JOIN positions
ON employees.positionID=positions.position_id
WHERE level='Junior'
AND leave_date=''
GROUP BY department) AS jr_salarys
ON department_budget.department=jr_salarys.department
WHERE department_budget.department='Engineering';

--25. How many employees left for a promotion opportunity, broken down by level?
SELECT level, COUNT(employees.employee_id)
FROM employees
LEFT JOIN exit_interviews
ON employees.employee_id=exit_interviews.employee_id
LEFT JOIN positions
ON employees.positionID=positions.position_id
WHERE reason_for_leaving='promotion opportunity'
GROUP BY level;

--26. Who is the highest paid current employee in each department?
SELECT department, employees.employee_id, first_name, last_name, MAX(salary)
FROM employees
LEFT JOIN positions
ON employees.positionID=positions.position_id
WHERE leave_date=''
GROUP BY department;


--27. What was the average overall_experience score for each department?
SELECT department, ROUND(avg(overall_experience),2) as avg_exp
FROM employees
LEFT JOIN positions
ON employees.positionID=positions.position_id
LEFT JOIN exit_interviews
ON employees.employee_id=exit_interviews.employee_id
GROUP BY department;

--28. How much money did each department spend on salary in 2024? Make sure you pro-rate salaries for any employees who joined or left during the year.
SELECT sum(((julianday(last_2024_day)-julianday(first_2024_day))/365.0)*salary) as total_2024_salaries --days worked divided by days in year, multiplied by salary. Then all summed for total spending.
FROM
--this subquery uses hire and leave dates to get adjusted 2024 worked dates, which will be used to determine what portion of the year was worked
-- the subquery isn't necessary here - it could be done in one straight query - but it improves readability
(SELECT *,
CASE WHEN hire_date<'2024-01-01' THEN '2024-01-01' ELSE hire_date END AS first_2024_day, --first day worked in 2024. For people hired before 2024, defaults to 2024-01-01 - else, hire date
CASE WHEN (leave_date>='2025-01-01' OR leave_date='') THEN '2024-12-31' ELSE leave_date END AS last_2024_day, --last day worked in 2024. For people who left after 2024 or haven't left, defaults to 2024-12-31 - else, leave date
(leave_date='' OR leave_date>='2024-01-01') AND hire_date<'2025-01-01' AS worked_in_2024 --flag to determine if someone worked in 2024, used for filtering
FROM employees)
WHERE worked_in_2024;
